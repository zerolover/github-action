name: Build Deps (Ubuntu)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'master'
      release_tag:
        description: 'Existing Release tag to upload to'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Check if Release tag exists
      id: check_release
      run: |
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.inputs.release_tag }}")
        if [ "$RESPONSE" -ne 200 ]; then
          echo "Release tag not found: ${{ github.event.inputs.release_tag }}"
          exit 1
        else
          echo "Release tag exists: ${{ github.event.inputs.release_tag }}"
        fi

    - name: Check out code
      uses: actions/checkout@v4

    - name: Clone Libreoffice
      run: |
        git clone --depth=1 --branch ${{ github.event.inputs.branch }} https://github.com/LibreOffice/core.git

    - name: Get latest commit ID
      id: get_commit_id
      run: |
        cd core
        echo "commit_id=$(git rev-parse HEAD | cut -c1-7)" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull Docker image
      run: |
        docker pull ghcr.io/zerolover/github-action/lo:v0.1

    - name: Compile
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ghcr.io/zerolover/github-action/lo:v0.1 \
          /bin/bash /workspace/script/build-deps-ubuntu.sh

    - name: Compress the output
      run: |
        tar -cJf deps_ubuntu_${{ github.event.inputs.branch }}_${{ env.commit_id }}.tar.xz deps/

    - name: Upload build artifacts to Existing Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        files: deps_ubuntu_${{ github.event.inputs.branch }}_${{ env.commit_id }}.tar.xz
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
