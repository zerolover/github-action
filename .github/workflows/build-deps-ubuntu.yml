name: Build Deps (Ubuntu)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'libreoffice-24-8'
      release_tag:
        description: 'Existing Release tag to upload to'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Check if Release tag exists
      uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with: 
        tag: ${{ github.event.inputs.release_tag }}

    - name: Release tag not exists
      run: echo "Tag does not exist, exiting..." && exit 1
      if: steps.check-tag.outputs.exists != 'true'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Clone Libreoffice
      run: |
        git clone --depth=1 --branch ${{ github.event.inputs.branch }} https://github.com/LibreOffice/core.git

    - name: Get latest commit ID and file name
      env:
        BRANCH_NAME: ${{ github.event.inputs.branch }}
      run: |
        cd core
        commit=$(git rev-parse HEAD | cut -c1-7)
        date=$(date +'%Y%m%d')
        branch=$(echo "$BRANCH_NAME" | tr -cd '0-9')
        arch=$(echo "$RUNNER_ARCH" | tr '[:upper:]' '[:lower:]')
        file_name="${date}_${branch}_${commit}_deps_ubuntu_${arch}.tar.xz"
        echo "file_name=$file_name" >> $GITHUB_ENV

        hash=$(md5sum download.lst | awk '{print $1}' | tr '[:lower:]' '[:upper:]')
        echo "hash=$hash" >> $GITHUB_ENV

    - name: Cache tarballs
      uses: actions/cache@v4
      with:
        path: core/external/tarballs
        key: tarballs-slim-${{ env.hash }}
        restore-keys: |
          tarballs-slim
          tarballs-
        enableCrossOsArchive: true

    - name: Pull Docker image
      run: |
        docker pull ghcr.io/zerolover/github-action/lo:dev

    - name: Compile
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ghcr.io/zerolover/github-action/lo:dev \
          /bin/bash /workspace/script/build-deps-ubuntu.sh

    - name: Compress the output
      run: |
        tar -I "xz -T0" -cf ${{ env.file_name }} deps/

    - name: Upload build artifacts to Existing Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        files: ${{ env.file_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
